/*	Filename:	EditorPalette.as		Purpose:	Item Palette class for the level editor		Author:		Justin Bachorik		Date:		3/21/09	*/package {		import flash.events.*;	import flash.display.*;		public class EditorPalette extends Sprite {				// constants		private static const ITEM_WIDTH = 30;		private static const GUTTER = 10;						// instance variables		var myItems:Array;		var myContainer:Sprite;				// constructor		public function EditorPalette():void {						// set up item array			setUpItems();						// defaults to selecting the hero			myItems[0].alpha = 1;					}	// end constructor				// function to set up all the items in the palette		private function setUpItems() {						// here we need to add one of each type of item to the myItems Array			myItems = new Array();			myItems.push(new Hero());			myItems.push(new Goal());			myItems.push(new BoardSquare());			myItems.push(new Wall());			for(var i:Number = 1; i < 6; i++)				myItems.push(new PowerUp(i));						// add em to the stage			var nextX:Number = 0;			for(i = 0; i < myItems.length; i++) {				this.addChild(myItems[i]);				myItems[i].x = nextX;				myItems[i].alpha = .3;				nextX += ITEM_WIDTH + GUTTER;								// add the click handlers				myItems[i].addEventListener(MouseEvent.CLICK, paletteClickHandler);			}													}	// end setUpItems				// function to handle changing palette clicks		private function paletteClickHandler(e:Event):void {			//trace(e.target);						// handle the visuals			for( var i:Number = 0; i < myItems.length; i++) {				myItems[i].alpha = .3;			}			e.target.alpha = 1;						// update the level editor's tracker of active brush			var myParent:Object = LevelEditor(this.parent);			// figure out what was clicked and set the brush accordingly			switch(e.target) {								case(myItems[0]):					myParent.setBrush('Hero');					break;								case(myItems[1]):					myParent.setBrush('Goal');					break;								case(myItems[2]):					myParent.setBrush('Empty');					break;									case(myItems[3]):					myParent.setBrush('Wall');					break;									case(myItems[4]):					myParent.setBrush('PowerUp1');					break;									case(myItems[5]):					myParent.setBrush('PowerUp2');					break;									case(myItems[6]):					myParent.setBrush('PowerUp3');					break;									case(myItems[7]):					myParent.setBrush('PowerUp4');					break;								case(myItems[8]):					myParent.setBrush('PowerUp5');					break;			}								}					}	// end class EditorPalette	}	// end package